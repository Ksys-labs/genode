assert_spec foc

#
# Build
#
set build_components {
	core
	init
	drivers/timer
	drivers/framebuffer
	l4linux
	drivers/acpi
}

lappend_if [have_spec pci] build_components drivers/pci
lappend_if [have_spec ps2] build_components drivers/input/ps2

build $build_components
create_boot_directory

#
# Config
#
set config  {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

<!--
	<start name="pci_drv">
		<binary name="pci_drv"/>
		<resource name="RAM" quantum="1M"/>
		<provides><service name="PCI"/></provides>
	</start>
-->

	<start name="acpi">
	  <resource name="RAM" quantum="10M"/>
		<binary name="acpi_drv"/>
		<provides>
		  <service name="PCI"/>
		  <service name="IRQ" />
		</provides>
		<route>
<!--
		  <service name="PCI"> <child name="pci_drv" /> </service>
-->
		  <any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>

	<start name="fb_drv">
		<binary name="vesa_drv"/>
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>

	<start name="input_drv">
		<binary name="ps2_drv"/>
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start>

	<start name="l4linux" priority="-1">
		<resource name="RAM" quantum="300M"/>
		<config args="mem=52M l4x_rd=initrd.gz console=tty0 verbose"/>
		<route>
		  <service name="PCI"> <child name="acpi" /> </service>
		  <service name="IRQ"> <child name="acpi" /> </service>
		  <any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>
	
</config>}

install_config $config

#
# Boot modules
#
set boot_modules {
	core
	init
	timer
	l4linux
	initrd.gz
	acpi_drv
}
lappend_if [have_spec   pci] boot_modules pci_drv
lappend_if [have_spec   ps2] boot_modules ps2_drv
lappend_if [have_spec  vesa] boot_modules vesa_drv

if {[have_spec x86]} {
	set uri "https://github.com/downloads/skalk/genode/busybox-initrd-x86-20120618.gz"
} elseif {[have_spec arm]} {
	set uri "https://github.com/downloads/skalk/genode/busybox-initrd-arm-20120618.gz"
}
if {![file exists bin/initrd.gz]} {
	puts "Download initramfs ..."
	exec >& /dev/null wget -c -O bin/initrd.gz $uri
}

build_boot_image  [join $boot_modules " "]

#
# Qemu
#
append qemu_args " -m 512 "
append qemu_args " -serial mon:stdio "
append_if [have_spec     x86] qemu_args " -net nic,model=e1000 -net user "
append_if [have_spec lan9118] qemu_args " -net nic,model=lan9118 -net user "

#
# Execute test case
#
#run_genode_until forever
exec cp var/run/linux_acpi.iso /srv/tftp/pxeboot.iso 
